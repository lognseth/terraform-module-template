name: 'Terraform checks'

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check

    # Generates an execution plan for Terraform
    - name: Terraform Validate
      run: terraform validate
      
    - name: Run tfsec
      uses: aquasecurity/tfsec-action@v1.0.2

  release:
    name: 'Release'
    runs-on: ubuntu-latest
    needs: terraform
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Checkout  
      uses: actions/checkout@v2  
      with:  
          fetch-depth: 0  

    - name: Minor version for each merge
      id: AutoTagger
      uses: anothrNick/github-tag-action@1.36.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false

    - name: Check secrets presence
      id: checkversionbump
      shell: bash
      run: |
        if [ "${{ steps.AutoTagger.outputs.new_tag }}" == "" ]; then
          echo "versionbumped=NO" >> $GITHUB_OUTPUT
        else
          echo "versionbumped=YES" >> $GITHUB_OUTPUT
        fi

    - name: Changelog
      uses: scottbrenner/generate-changelog-action@master
      id: Changelog
      env:
        REPO: ${{ github.repository }}

    - name: Create Release
      if: (steps.checkversionbump.outputs.versionbumped == 'YES')
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.AutoTagger.outputs.new_tag }}
        release_name: Release ${{ steps.AutoTagger.outputs.new_tag }}
        body: |
          ${{ steps.Changelog.outputs.changelog }}
        draft: false
        prerelease: false